% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Fractions.R
\name{EstimateFractions}
\alias{EstimateFractions}
\title{Estimate fractions of each RNA population}
\usage{
EstimateFractions(
  obj,
  features = "all",
  mutrate_populations = "all",
  fraction_design = NULL,
  Poisson = TRUE,
  strategy = c("standard")
)
}
\arguments{
\item{obj}{EZbakRDataobject}

\item{features}{Character vector of the set of features you want to stratify
reads by and estimate proportions of each RNA population. The default of "all"
will use all feature columns in the \code{obj}'s cB.}

\item{mutrate_populations}{Character vector of the set of mutational populations
that you want to infer the rates of mutations for.}

\item{fraction_design}{"Design matrix" specifying which RNA populations exist
in your samples. By default, this will be created automatically and will assume
that all combinations of the \code{mutrate_populations} you have requested to analyze are
present in your data. If this is not the case for your data, then you will have
to create one manually.

If you call the function \code{create_fraction_design(...)}, providing a vector
of mutational population names as input, it will create a \code{fraction_design} table for
you, with the assumption that every single possible combination of mutational populations
is present in your data. You can then edit the \code{present} column as necessary to
get an appropriate \code{fraction_design} for your use case. See below for details on
the required contents of \code{fraction_design} and its interpretation.

\code{fraction_design} must have one column per element of \code{mutrate_populations},
with these columns sharing the name of the \code{mutrate_populations}. It must also have
one additional column named \code{present}. All elements of fraction_design should be
booleans (\code{TRUE} or \code{FALSE}). It should include all possible combinations of \code{TRUE}
and \code{FALSE} for the \code{mutrate_populations} columns. A \code{TRUE} in one of these columns
represents a population of RNA that is expected to have above background mutation
rates of that type. \code{present} will denote whether or not that population of RNA
is expected to exist in your data.

For example, assume you are doing a typical TimeLapse-seq/SLAM-seq/TUC-seq/etc. experiment
where you have fed cells with s^4U and recoded any incorporated s^4U to a nucleotide
that reverse transcriptase will read as a cytosine. That means that \code{mutrate_populations}
will be "TC", since you want to estimate the fraction of RNA that was s^4U labeled, i.e.,
the fraction with high T-to-C mutation content. \code{fraction_design} will thus have two columns:
\code{TC} and \code{present}. It will also have two rows. One of these rows must have a value of
\code{TRUE} for \code{TC}, and the other must have a value of \code{FALSE}. The row with a value of \code{TRUE}
for \code{TC} represents the population of reads with high T-to-C mutation content,
i.e., the reads from RNA that were synthesized while s^4U was present. The row
with a value of \code{FALSE} for \code{TC} reprsents the population of reads with low T-to-C mutation
content, i.e., the reads from RNA that existed prior to s^4U labeling. Both of these
populations exist in your data, so the value of the \code{present} column should be \code{TRUE} for
both of these. See the lazily loaded \code{standard_fraction_design} object for an example
of what this tibble could look like. ("lazily loaded \code{standard_fraction_design} object"
means that if you run \code{print(standard_fraction_design)} after loading \code{EZbakR} with \code{library(EZbakR)},
then you can see its contents. More specifically, lazily loaded means that this table is not loaded
into memory until you ask for it, via something like a \code{print()} call.)

As another example, consider TILAC, a NR-seq extension developed by the Simon lab. TILAC was originally
described in \href{https://academic.oup.com/nar/article/50/19/e110/6677324}{Courvan et al., 2022}. In this
method, two populations of RNA, one from s^4U fed cells and one from s^6G fed cells, are pooled
and prepped for sequencing together. This allows for internally controlled comparisons of RNA
abundance without spike-ins. s^4U is recoded to a cytosine analog by TimeLapse chemistry
(or similar chemistry) and s^6G is recoded to an adenine analog. Thus, \code{fraction_design} includes
columns called \code{TC} and \code{GA}. A unique aspect of the TILAC \code{fraction_design} table is that
one of the possible populations, \code{TC} and \code{GA} both \code{TRUE}, is denoted as not present (\code{present} = \code{FALSE}).
This is because there is no RNA was exposed to both s^4U and s^6G, thus a population of reads
with both high T-to-C and G-to-A mutational content should not exist. To see an example
of what a TILAC \code{fraction_design} table could look like, see the lazily loaded
\code{tilac_fraction_design} object.}

\item{Poisson}{If \code{TRUE}, use U-content adjusted Poisson mixture modeling strategy. Often provides
significant performance gain without sacrificing accuracy.}

\item{strategy}{String denoting which new read mutation rate estimation strategy to use.
Options include:
\itemize{
\item standard: Estimate a single new read and old read mutation rate for each
sample. This is done via a binomial mixture model aggregating over
\item hierarchical (NOT YET IMPLEMENTED): Estimate feature-specific mutation
rate with standard, regularizing the feature-specific
estimate with a sample-wide prior.
\item smalec (NOT YET IMPLEMENTED): Estimate two old read mutation rates, as was done in
Smalec et al., 2023. Idea is that alignment artifacts can give rise to a
high mutation rate old read population that should be accounted for
to avoid overestimating the fraction of new reads
}}
}
\description{
Estimate fractions of each RNA population
}
